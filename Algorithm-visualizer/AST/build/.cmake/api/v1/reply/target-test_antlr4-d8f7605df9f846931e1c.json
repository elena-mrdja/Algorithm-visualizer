{
	"artifacts" : 
	[
		{
			"path" : "test_antlr4"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"target_link_libraries",
			"add_dependencies",
			"include",
			"add_definitions",
			"include_directories"
		],
		"files" : 
		[
			"CMakeLists.txt",
			"cmake/ExternalAntlr4Cpp.cmake"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 44,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 49,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 19,
				"parent" : 0
			},
			{
				"file" : 1,
				"parent" : 3
			},
			{
				"command" : 2,
				"file" : 1,
				"line" : 135,
				"parent" : 4
			},
			{
				"command" : 4,
				"file" : 0,
				"line" : 13,
				"parent" : 0
			},
			{
				"command" : 5,
				"file" : 0,
				"line" : 21,
				"parent" : 0
			},
			{
				"command" : 5,
				"file" : 0,
				"line" : 38,
				"parent" : 0
			},
			{
				"command" : 5,
				"file" : 0,
				"line" : 39,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : " -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk -mmacosx-version-min=11.6  "
				},
				{
					"fragment" : "-std=gnu++17"
				}
			],
			"defines" : 
			[
				{
					"backtrace" : 6,
					"define" : "ANTLR4CPP_STATIC"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 7,
					"path" : "/Users/katushaborisova/Desktop/test_antlr4 copy/build/antlr4_runtime/src/antlr4_runtime/runtime/Cpp/runtime/src"
				},
				{
					"backtrace" : 8,
					"path" : "/Users/katushaborisova/Desktop/test_antlr4 copy/build/antlr4cpp_generated_src/AlgoLexer"
				},
				{
					"backtrace" : 9,
					"path" : "/Users/katushaborisova/Desktop/test_antlr4 copy/build/antlr4cpp_generated_src/AlgoParser"
				}
			],
			"language" : "CXX",
			"sourceIndexes" : 
			[
				0,
				1,
				4,
				6
			]
		}
	],
	"dependencies" : 
	[
		{
			"backtrace" : 5,
			"id" : "antlr4_runtime-build_static::@6890427a1f51a3e7e1df"
		}
	],
	"id" : "test_antlr4::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"backtrace" : 2,
				"fragment" : "antlr4_runtime/src/antlr4_runtime/runtime/Cpp/dist/libantlr4-runtime.a",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "test_antlr4",
	"nameOnDisk" : "test_antlr4",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				4,
				6
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				2,
				3,
				5
			]
		},
		{
			"name" : "CMake Rules",
			"sourceIndexes" : 
			[
				7,
				8
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "main.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "ast.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "ast.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"isGenerated" : true,
			"path" : "build/antlr4cpp_generated_src/AlgoLexer/AlgoLexer.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"isGenerated" : true,
			"path" : "build/antlr4cpp_generated_src/AlgoLexer/AlgoLexer.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"isGenerated" : true,
			"path" : "build/antlr4cpp_generated_src/AlgoParser/AlgoParser.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"isGenerated" : true,
			"path" : "build/antlr4cpp_generated_src/AlgoParser/AlgoParser.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 0,
			"isGenerated" : true,
			"path" : "build/antlr4cpp_generated_src/AlgoLexer/AlgoLexer.interp.rule",
			"sourceGroupIndex" : 2
		},
		{
			"backtrace" : 0,
			"isGenerated" : true,
			"path" : "build/antlr4cpp_generated_src/AlgoParser/AlgoParser.interp.rule",
			"sourceGroupIndex" : 2
		}
	],
	"type" : "EXECUTABLE"
}
